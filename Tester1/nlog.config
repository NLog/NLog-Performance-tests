<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog"/>
  </configSections>
  <nlog xmlns="http://nlog-project.org/schemas/NLog.xsd"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        internalLogFile="c:\temp\log\_nlog.txt" internalLogLevel="Off"
        >
    <!--<extensions>
      <add assembly ="NLogTest"/>
    </extensions>-->
    <!--<targets async="true" >
      <target name ="mipLoggertarget" xsi:type="File" fileName="c:/temp/Log/${gdc:item=jobId}/MIP/MipLogger.log" layout="${message}" keepFileOpen="true" />
    </targets>-->
    <!--<targets>

      <target name="asyncWrapper" xsi:type="AsyncWrapper">
        <target name ="mipLoggertarget" xsi:type="File" fileName="c:/temp/Log/${gdc:item=jobId}/MIP/MipLogger.log" layout="${message}" keepFileOpen="true" />
      </target>


    </targets>-->

    <!--<targets  >

      <target name="asyncWrapper" xsi:type="AsyncWrapper"   overflowAction="Discard">
        <target name ="mipLoggertarget" xsi:type="File" fileName="c:/temp/Log/${gdc:item=jobId}.log" layout="${message}" keepFileOpen="true" AutoFlush="false" ConcurrentWrites="false" />
      </target>

    </targets>-->
    <!--<targets  >

      <target name="asyncWrapper" xsi:type="AsyncWrapper"   >
        <target name ="mipLoggertarget" xsi:type="File" fileName="c:/temp/Log/test4.log" layout="${message}" keepFileOpen="true" AutoFlush="false" ConcurrentWrites="false" />
      </target>

    </targets>-->
    <!--<rules>
      <logger name="mipLogger" minlevel="Info" writeTo="mipLoggertarget"/>

    </rules>
    <targets  async="true" >

     
        <target name ="mipLoggertarget" xsi:type="File" fileName="c:/temp/Log/test5.log" layout="${message}" keepFileOpen="true" AutoFlush="false" ConcurrentWrites="false" />
    
    </targets>-->

    <targets>
      
      <!--notes:
      - it's faster with less targets (while not used). 17 sec with 4 instead of 9 (almost 2 times slower)
      - sync writing with concurrentwrites is much slower
      - sync writing withtout concurrentwirtes: 9 sec -> 
      -->
      
      <!--<target name="asyncWrapper" xsi:type="AsyncWrapper" overflowAction="Block" queueLimit="1000000" batchSize="1000" timeToSleepBetweenBatches="0"   >
        <target name ="mipLoggertargetwrapped" xsi:type="File"
            fileName="c:/temp/Log/test1.log"
            layout="${message}" keepFileOpen="true" AutoFlush="false"
            ConcurrentWrites="true"
            CleanupFileName="false"/>
      </target>
      <target name="asyncWrapper2" xsi:type="AsyncWrapper" overflowAction="Block" queueLimit="1000000" batchSize="1000" timeToSleepBetweenBatches="0"   >
        <target name ="mipLoggertargetwrapped2" xsi:type="File"
            fileName="c:/temp/Log/test1.log"
            layout="${message}" keepFileOpen="true" AutoFlush="false"
            ConcurrentWrites="false"
            CleanupFileName="false"/>
      </target>
      <target name ="mipLoggertarget" xsi:type="File"
            fileName="c:/temp/Log/test1.log"
            layout="${message}" keepFileOpen="true" AutoFlush="false"
            ConcurrentWrites="true"
            CleanupFileName="false"/>-->
      <target name ="mipLoggertarget2" xsi:type="File"
              fileName="c:/temp/Log/test1.log"
              layout="${message}" keepFileOpen="true" AutoFlush="false"
              ConcurrentWrites="false"
              CleanupFileName="false"/>

    </targets>
    <rules>
      <logger name="mipLogger" minlevel="Trace" writeTo="mipLoggertarget2"/>

    </rules>
  </nlog>

  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
  </startup>
</configuration>